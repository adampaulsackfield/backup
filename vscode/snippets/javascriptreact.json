{
	// Place your snippets for javascriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	// ! ARROW FUNCTIONS START
	"Arrow Function No Params": {
		"prefix": "af",
		"body": "() => $0",
		"description": "Expands into an arrow function, without params."
	},

	"Arrow Function Params": {
		"prefix": "afa",
		"body": "($1) => $0",
		"description": "Expands into an arrow function, with params."
	},
	"Arrow Function Return No Params": {
		"prefix": "afr",
		"body": ["() => {", "return $0", "}"],
		"description": "Epands "
	},
	"Arrow Function Return Params": {
		"prefix": "afar",
		"body": ["($1) => {", "return $0", "}"],
		"description": "Epands "
	},
	// ! ARROW FUNCTIONS END

	// ! REACT START
	"React Arrow Function Const Export": {
		"prefix": "rafce",
		"body": [
			"import './$TM_FILENAME_BASE'.scss",
			"",
			"const $TM_FILENAME_BASE = () => {",
			"",
			"  return <div>$TM_FILENAME_BASE</div>;",
			"",
			"};",
			"",
			"export default $TM_FILENAME_BASE"
		],
		"description": "Builds a react functional arrow component, named the same as the file"
	}
	// ! REACT END
}
